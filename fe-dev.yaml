# 前端开发用的部署文件，
version: "3"
services:
  ddl-postgres-dev:
    image: postgres:alpine
    container_name: ddl-postgres-dev
    restart: always
    volumes:
      - ~/data/ddl-postgres-dev:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=ddl_database
      - POSTGRES_USER=ddl_username
      - POSTGRES_PASSWORD=ddl_password
    ports:
      - '0.0.0.0:5432:5432'
    networks:
      - ddl-dev
  ddl-redis-dev:
    image: redis:alpine
    container_name: ddl-redis-dev
    restart: always
    volumes:
      - ~/data/ddl_redis_dev:/data
    ports:
      - '0.0.0.0:6379:6379'
    networks:
      - ddl-dev
  ddl-rabbitmq-dev:
    image: rabbitmq:management
    container_name: ddl-rabbitmq-dev
    restart: always
    hostname: my-rabbit
    ports:
      - '0.0.0.0:5672:5672'
      - '0.0.0.0:15672:15672'
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    volumes:
      - ~/data/ddl_rabbitmq_dev:/var/lib/rabbitmq
    networks:
      - ddl-dev
  ddl-backend-dev:
    command: bash /app/docker/entrypoint-dev.sh
    volumes:
      - .:/app
      - ~/data/backend-data:/data
    image: 4ddl/ddlb
    container_name: ddl-backend-dev
    restart: always
    depends_on:
      - ddl-redis-dev
      - ddl-postgres-dev
    environment:
      - ddl_env=development
      - REDIS_HOST=ddl-redis-dev
      - POSTGRES_HOST=ddl-postgres-dev
    ports:
      - '0.0.0.0:8000:8000'
    networks:
      - ddl-dev
networks:
  ddl-dev: