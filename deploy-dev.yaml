# 本地测试部署的时候运行的所有功能，判题机虚拟使用
version: "3"
services:
  ddl-postgres-dev:
    image: postgres:alpine
    container_name: oj-postgres
    restart: always
    volumes:
      - ~/data/oj-postgres-dev:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=oj
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    ports:
      - "0.0.0.0:5432:5432"
    networks:
      - ddl
  ddl-redis-dev:
    image: redis:alpine
    container_name: oj-redis
    volumes:
      - ~/data/oj-redis-dev:/data
    ports:
      - "0.0.0.0:6379:6379"
    networks:
      - ddl
  ddl-rabbitmq-dev:
    image: rabbitmq:management
    container_name: oj-rabbitmq-dev
    restart: always
    hostname: my-rabbit
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    ports:
      - '0.0.0.0:5672:5672'
      - '0.0.0.0:15672:15672'
    volumes:
      - ~/data/oj-rabbitmq-dev:/var/lib/rabbitmq
    networks:
      - oj-dev
  ddl-backend-dev:
    command: bash /app/docker/entrypoint-dev.sh
    volumes:
      - .:/app
      - ~/data/backend-data:/data
    image: 4ddl/ddlb
    container_name: oj-backend-dev
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - oj-redis
      - oj-postgres
    environment:
      - REDIS_HOST=oj-redis-dev
      - POSTGRES_HOST=oj-postgres-dev
      - RABBITMQ_HOST=oj-rabbitmq-dev
    ports:
      - "0.0.0.0:8000:8000"
    networks:
      - ddl
  ddl-web-dev:
    container_name: oj-web-dev
    image: 4ddl/ddlf
    depends_on:
      - oj-backend
    environment:
      - BACKEND_HOST=oj-backend-dev
      - BACKEND_PORT=8000
    ports:
      - "0.0.0.0:80:80"
    networks:
      - ddl
networks:
  ddl:
